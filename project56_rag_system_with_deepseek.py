# -*- coding: utf-8 -*-
"""project56-rag-system-with-deepseek.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16GQh9VCXkESF5szzycr2GdozuE26AQDY
"""

!pip install pdfplumber langchain langchain_community langchain_core langchain_experimental faiss-cpu

from langchain_community.document_loaders import PDFPlumberLoader
from langchain_experimental.text_splitter import SemanticChunker
from langchain_community.embeddings import HuggingFaceEmbeddings
from langchain_community.vectorstores import FAISS
from langchain.prompts import PromptTemplate
from langchain.chains.llm import LLMChain
from langchain.chains.combine_documents. stuff import StuffDocumentsChain
from langchain. chains import RetrievalQA

loader = PDFPlumberLoader("/content/Neural-Networks.pdf")
docs = loader.load()

# docs

text_splitter = SemanticChunker( HuggingFaceEmbeddings() )
documents=  text_splitter.split_documents(docs)

embedder = HuggingFaceEmbeddings()

vector = FAISS.from_documents(documents, embedder)
retriever = vector.as_retriever(search_type = 'similarity' , search_kwargs= {"k":3} )

!pip install langchain_groq

from langchain_groq import ChatGroq

llm = ChatGroq(
    groq_api_key= "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",
    temperature= 0,
    model_name= "deepseek-r1-distill-llama-70b"

)

llm.invoke("What is Python?")

# Define prompt

prompt = """
1. Use the following piece of context to answer the question at the end.
2. If you don't know the answer, just say that "I don't know" but don't make up an answer on your own .\n
3. Keep the answer crisp and limited to 3, 4 sentences
Context: {context}
Question: {question}
Helpful Answer:"""

QA_CHAIN_PROMPT = PromptTemplate.from_template(prompt)

llm_chain= LLMChain (
    llm= llm,
    prompt = QA_CHAIN_PROMPT,
    callbacks= None,
    verbose= True
)

document_prompt = PromptTemplate(
    input_variables=  ["page_content" , "source" ],
    template= "Context : \ncontent: {page_content}\nsource;{source}"
)

combine_documents_chain = StuffDocumentsChain(
  llm_chain= llm_chain,
  document_variable_name="context",
  document_prompt=document_prompt,
  callbacks= None
)

qa = RetrievalQA (
    combine_documents_chain = combine_documents_chain,
    verbose = True,
    retriever = retriever,
    return_source_documents = True)

user_input = "What is Sigmoid Activation Function?"
response = qa (user_input) ["result"]

print(response)

